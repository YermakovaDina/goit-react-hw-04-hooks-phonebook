{"version":3,"sources":["components/Container/Container.js","components/Forms/Form.js","components/Filters/Filter.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["Container","children","className","Form","onSubmit","useState","name","setName","number","setNumber","handleChange","e","currentTarget","value","preventDefault","htmlFor","uuidv4","type","pattern","title","required","onChange","id","Filter","filter","protoType","PropTypes","string","func","ContactList","contacts","delContact","map","onClick","App","setContacts","setFilter","useEffect","parsedContacts","JSON","parse","localStorage","getItem","setItem","stringify","data","contactsNew","some","contact","toLowerCase","alert","prevState","includes","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a056589.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Container.css';\r\n\r\nconst Container = ({ children }) => {\r\n  return <div className=\"container\">{children}</div>;\r\n};\r\n\r\nexport default Container;\r\n","import { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\nimport './Form.css';\r\n\r\nexport default function Form({ onSubmit }) {\r\n  //const [contacts, setContacts] = useState([]);\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  // Change\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  //Submit\r\n  const handleOnSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    onSubmit(name, number);\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <form className=\"form\" onSubmit={handleOnSubmit}>\r\n        <label className=\"form_label\" htmlFor={uuidv4()}>\r\n          Name\r\n          <input\r\n            className=\"form_input\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={name}\r\n            onChange={handleChange}\r\n            id={uuidv4()}\r\n          ></input>\r\n        </label>\r\n        <label className=\"form_label\" htmlFor={uuidv4()}>\r\n          Number\r\n          <input\r\n            className=\"form_input\"\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={number}\r\n            onChange={handleChange}\r\n            id={uuidv4()}\r\n          ></input>\r\n        </label>\r\n        <button className=\"form_button\" type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nForm.propTypes = {\r\n  addContact: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Filter.css';\r\n\r\nconst Filter = ({ filter, onChange }) => {\r\n  return (\r\n    <label className=\"filtr_label\">\r\n      Find contacts by name\r\n      <input\r\n        className=\"filtr_input\"\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Введите имя контакта. Поиск не чувствительный к регистру вводимых символов.\"\r\n        required\r\n        value={filter}\r\n        onChange={onChange}\r\n      ></input>\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.protoType = {\r\n  filter: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport { Filter };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './ContactList.css';\r\n\r\n// const ContactList = ({ contacts, delContact }) => {\r\n//   <ul className=\"list\">\r\n//     {contacts.map(({ id, name, number }) => (\r\n//       <li className=\"list_item\" key={id}>\r\n//         <span>\r\n//           {name}: {number}\r\n//         </span>\r\n//         <button\r\n//           className=\"button_list\"\r\n//           type=\"button\"\r\n//           id={id}\r\n//           onClick={() => delContact(id)}\r\n//         >\r\n//           Delete\r\n//         </button>\r\n//       </li>\r\n//     ))}\r\n//   </ul>;\r\n// }\r\n\r\nconst ContactList = ({ contacts, delContact }) => {\r\n  return (\r\n    <ul className=\"list\">\r\n      {contacts.map(({ id, name, number }) => {\r\n        return (\r\n          <li className=\"list_item\" key={id}>\r\n            <span>\r\n              {name}: {number}\r\n            </span>\r\n            <button\r\n              className=\"button_list\"\r\n              type=\"submit\"\r\n              id={id}\r\n              onClick={() => delContact(id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\n// ContactList.propTypes = {\r\n//   contacts: PropTypes.objectOf,\r\n//   delContact: PropTypes.func,\r\n// };\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.objectOf(PropTypes.string.isRequired).isRequired,\r\n  ).isRequired,\r\n  delContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import { useState, useEffect } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport Container from './components/Container/Container';\r\nimport Form from './components/Forms/Form';\r\nimport { Filter } from './components/Filters/Filter';\r\nimport ContactList from './components/ContactList/ContactList';\r\n\r\nimport './App.css';\r\n\r\nexport default function App() {\r\n  const [contacts, setContacts] = useState([]);\r\n  const [filter, setFilter] = useState('');\r\n\r\n  //componentDidMount\r\n  useEffect(() => {\r\n    const parsedContacts = JSON.parse(localStorage.getItem('contacts'));\r\n    if (parsedContacts) {\r\n      setContacts(parsedContacts);\r\n    }\r\n  }, []);\r\n\r\n  // componentDidUpdate\r\n  useEffect(() => {\r\n    localStorage.setItem('contacts', JSON.stringify(contacts));\r\n  }, [contacts]);\r\n\r\n  // Add the contact\r\n  // const addContact = data => {\r\n  //   const someContact = contacts.some(contact =>\r\n  //     contact.name.includes(data.name),\r\n  //   );\r\n  //   if (someContact) {\r\n  //     return alert(`${data.name} is already in contacts!`);\r\n  //   }\r\n  //   return { contacts: [data, ...prevState.contacts] };\r\n  // };\r\n\r\n  //- - -\r\n  // Add contact\r\n  const addContact = data => {\r\n    // generation id\r\n    const contactsNew = {\r\n      id: uuidv4(),\r\n      ...data,\r\n    };\r\n\r\n    const someContact = contacts.some(\r\n      contact => contact.name.toLowerCase() === data.name.toLowerCase(),\r\n    );\r\n\r\n    if (someContact) {\r\n      alert(`${data.name} is already in contacts`);\r\n      return;\r\n    }\r\n    //Add the new contact\r\n    setContacts(prevState => [contactsNew, ...prevState]);\r\n  };\r\n  //- - -\r\n\r\n  // Delete the contact\r\n  const delContact = contactId => {\r\n    setContacts([...contacts.filter(contact => contact.id !== contactId)]);\r\n  };\r\n  //- - -\r\n  // const delContacts = (contactsId) => {\r\n  //     setContacts((contacts) =>\r\n  //       contacts.filter((contact) => contact.id !== contactsId)\r\n  //     );\r\n  // };\r\n  //- - -\r\n\r\n  const chengeFilter = e => {\r\n    return setFilter(e.currentTarget.value.toLowerCase());\r\n  };\r\n\r\n  const turnOnFilter = () => {\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter),\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <h1>Phonebook</h1>\r\n      <Form onSubmit={addContact} />\r\n\r\n      <h2>Contacts</h2>\r\n      <Filter value={filter} onChange={chengeFilter} />\r\n\r\n      <ContactList contacts={turnOnFilter()} delContact={delContact} />\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}