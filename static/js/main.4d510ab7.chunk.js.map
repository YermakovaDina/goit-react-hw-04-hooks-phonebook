{"version":3,"sources":["components/Container/Container.js","components/Forms/Form.js","components/Filters/Filter.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["Container","children","className","Form","state","contacts","name","number","nameInputId","uuidv4","numberInputId","handleChange","e","currentTarget","value","setState","handleOnSubmit","preventDefault","obj","id","contact","props","onSubmit","reset","this","htmlFor","type","pattern","title","required","onChange","Component","protoType","PropTypes","func","Filter","filter","string","ContactList","delContact","map","onClick","App","newContactId","addContact","data","prevState","some","includes","alert","contactId","visibleContacts","chengeFilter","toLowerCase","console","log","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d510ab7.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Container.css';\r\n\r\nconst Container = ({ children }) => {\r\n  return <div className=\"container\">{children}</div>;\r\n};\r\n\r\nexport default Container;\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Form.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    contacts: [],\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  nameInputId = uuidv4();\r\n  numberInputId = uuidv4();\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleOnSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const obj = {\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n      id: uuidv4(),\r\n    };\r\n\r\n    this.setState({ contact: obj });\r\n    this.props.onSubmit(obj);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <form className=\"form\" onSubmit={this.handleOnSubmit}>\r\n          <label className=\"form_label\" htmlFor={this.nameInputId}>\r\n            Name\r\n            <input\r\n              className=\"form_input\"\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n              id={this.nameInputId}\r\n            ></input>\r\n          </label>\r\n          <label className=\"form_label\" htmlFor={this.numberInputId}>\r\n            Number\r\n            <input\r\n              className=\"form_input\"\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              value={this.state.number}\r\n              onChange={this.handleChange}\r\n              id={this.numberInputId}\r\n            ></input>\r\n          </label>\r\n          <button className=\"form_button\" type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nForm.protoType = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nexport default Form;\r\n","import PropTypes from 'prop-types';\r\nimport './Filter.css';\r\n\r\nconst Filter = ({ filter, onChange }) => {\r\n  return (\r\n    <label className=\"filtr_label\">\r\n      Find contacts by name\r\n      <input\r\n        className=\"filtr_input\"\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Введите имя контакта. Поиск не чувствительный к регистру вводимых символов.\"\r\n        required\r\n        value={filter}\r\n        onChange={onChange}\r\n      ></input>\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.protoType = {\r\n  filter: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './ContactList.css';\r\n\r\nconst ContactList = ({ contacts, delContact }) => {\r\n  return (\r\n    <ul className=\"list\">\r\n      {contacts.map(contact => {\r\n        return (\r\n          <li className=\"list_item\" key={contact.id}>\r\n            <span>\r\n              {contact.name}: {contact.number}\r\n            </span>\r\n            <button\r\n              className=\"button_list\"\r\n              type=\"button\"\r\n              id={contact.id}\r\n              onClick={() => delContact(contact.id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array,\r\n  delContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactList;\r\n","import './App.css';\nimport { Component } from 'react';\nimport Container from './components/Container/Container';\nimport Form from './components/Forms/Form';\nimport Filter from './components/Filters/Filter';\nimport ContactList from './components/ContactList/ContactList';\nimport { v4 as uuidv4 } from 'uuid';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    // contacts: [\n    //   { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    //   { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    //   { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    //   { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    // ],\n    filter: '',\n  };\n  newContactId = uuidv4();\n\n  addContact = data => {\n    this.setState(prevState => {\n      if (\n        prevState.contacts.some(contact => contact.name.includes(data.name))\n      ) {\n        return alert(`${data.name} is already in contacts!`);\n      }\n\n      return { contacts: [data, ...prevState.contacts] };\n    });\n  };\n\n  delContact = contactId => {\n    const state = this.state;\n    const visibleContacts = state.contacts.filter(\n      contact => contact.id !== contactId,\n    );\n    this.setState({ contacts: visibleContacts });\n    return visibleContacts;\n  };\n\n  chengeFilter = e => {\n    this.setState({ filter: e.currentTarget.value.toLowerCase() });\n  };\n\n  //localStorage\n  componentDidMount() {\n    console.log('App componentDidMount');\n\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    console.log('App componentDidMount');\n\n    if (this.state.contacts !== prevState.contacts) {\n      console.log('Обновилось поле contacts');\n\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n  //\n\n  render() {\n    const { contacts, filter } = this.state;\n    const visibleContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <Form onSubmit={this.addContact} />\n\n        <h2>Contacts</h2>\n        <Filter value={this.state.filter} onChange={this.chengeFilter} />\n\n        <ContactList contacts={visibleContacts} delContact={this.delContact} />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}