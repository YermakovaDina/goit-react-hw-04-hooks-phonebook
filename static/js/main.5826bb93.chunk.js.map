{"version":3,"sources":["components/Container/Container.js","components/ContactList/ContactList.js","components/Filters/Filter.js","components/Forms/Form.js","App.js","index.js"],"names":["Container","children","className","ContactList","contacts","onDeleteContacts","map","id","name","number","onClick","Filter","value","onChange","type","pattern","title","required","Form","onSubmit","useState","setName","setNumber","handleChange","event","currentTarget","preventDefault","App","setContacts","filter","setFilter","useEffect","parsedContacts","JSON","parse","localStorage","getItem","setItem","stringify","getFilterVisibleContacts","normalizeFilter","toLowerCase","contact","includes","getVisibleContacts","text","contactsNew","uuidv4","some","alert","prevState","contactsId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5826bb93.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Container.css';\r\n\r\nconst Container = ({ children }) => {\r\n  return <div className=\"container\">{children}</div>;\r\n};\r\n\r\nexport default Container;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './ContactList.css';\r\n\r\nconst ContactList = ({ contacts, onDeleteContacts }) => (\r\n  <ul className=\"list\">\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li className=\"list_item\" key={id}>\r\n        <span>\r\n          {name}: {number}\r\n        </span>\r\n        <button className=\"button_list\" onClick={() => onDeleteContacts(id)}>\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.objectOf(PropTypes.string.isRequired).isRequired,\r\n  ).isRequired,\r\n  onDeleteContacts: PropTypes.func.isRequired,\r\n};\r\n\r\nexport { ContactList };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Filter.css';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <div>\r\n    <label className=\"filtr_label\">\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"The name can only consist of letters, apostrophes, dashes and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan etc.\"\r\n        required\r\n        value={value}\r\n        onChange={onChange}\r\n        className=\"filtr_input\"\r\n      />\r\n    </label>\r\n  </div>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport { Filter };\r\n","import { useState } from 'react';\r\nimport './Form.css';\r\n\r\nfunction Form({ onSubmit }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  // add contact button\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    onSubmit({ name, number });\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form className=\"form\" onSubmit={handleSubmit}>\r\n      <label className=\"form_label\">\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"The name can only consist of letters, apostrophes, dashes and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan etc.\"\r\n          required\r\n          value={name}\r\n          onChange={handleChange}\r\n          className=\"form_input\"\r\n        />\r\n      </label>\r\n      <label className=\"form_label\">\r\n        Number\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"The phone number must be digits and may contain spaces, dashes, parentheses and may start with +\"\r\n          required\r\n          value={number}\r\n          onChange={handleChange}\r\n          className=\"form_input\"\r\n        />\r\n      </label>\r\n      <button type=\"submit\" className=\"form_button\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport { Form };\r\n","import { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport Container from './components/Container/Container';\nimport { ContactList } from './components/ContactList/ContactList';\nimport { Filter } from './components/Filters/Filter';\nimport { Form } from './components/Forms/Form';\n\nimport './App.css';\n\nfunction App() {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    const parsedContacts = JSON.parse(localStorage.getItem('contacts'));\n    if (parsedContacts) {\n      setContacts(parsedContacts);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  // Add contact\n  const forSubmitHandler = text => {\n    // \"id\" generation\n    const contactsNew = {\n      id: uuidv4(),\n      ...text,\n    };\n\n    const someContact = contacts.some(\n      contact => contact.name.toLowerCase() === text.name.toLowerCase(),\n    );\n\n    if (someContact) {\n      alert(`${text.name} is already in contacts`);\n      return;\n    }\n\n    // Add the new contact\n    setContacts(prevState => [contactsNew, ...prevState]);\n  };\n\n  // Delete the contact\n  const deleteContacts = contactsId => {\n    setContacts(contacts =>\n      contacts.filter(contact => contact.id !== contactsId),\n    );\n  };\n\n  // Filter\n  const changeFilter = event => {\n    return setFilter(event.currentTarget.value);\n  };\n\n  // Searching by filter\n  const getVisibleContacts = () => {\n    const normalizeFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizeFilter),\n    );\n  };\n\n  const getFilterVisibleContacts = getVisibleContacts();\n\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <Form onSubmit={forSubmitHandler} />\n      <h2>Contacts</h2>\n      <Filter value={filter} onChange={changeFilter} />\n      <ContactList\n        contacts={getFilterVisibleContacts}\n        onDeleteContacts={deleteContacts}\n      />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}